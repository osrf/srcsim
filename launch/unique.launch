<launch>
  <!-- start with robot harnessed by default. -->
  <!-- set:
         roslaunch srcsim unique.launch walk_test:=walk
       to automatically walk forward after harness detach. -->
  <arg name="debug" default="false" />
  <arg name="extra_gazebo_args" default=""/>
  <arg name="grasping_init" default="true"/>
  <arg name="grasping_init_wait_time" default="20"/>
  <arg name="paused" default="false" />
  <arg name="use_local_build" default="false" />
  <arg name="verbose" default="true" />
  <arg name="walk_test" default="false"/>

  <arg if="$(optenv USE_CUSTOM_WORLD 0)" name="world_name" default="$(env CUSTOM_WORLD_PATH)" />
  <arg unless="$(optenv USE_CUSTOM_WORLD 0)" name="world_name" default="$(find srcsim)/worlds/unique.world" />

  <include file="$(find val_gazebo)/launch/val_sim_gazebo_sync.launch" pass_all_args="false">
    <env name="GAZEBO_RESOURCE_PATH" value="$(find srcsim)/worlds"/>
    <env name="GAZEBO_MODEL_PATH" value="$(env GAZEBO_MODEL_PATH):$(find srcsim)/models"/>
    <env name="GAZEBO_PLUGIN_PATH" value="$(find srcsim)/plugins"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="extra_gazebo_args" default="$(arg extra_gazebo_args)"/>
    <arg name="paused" value="$(arg paused)" />
    <arg name="verbose" value="$(arg verbose)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <include file="$(find ihmc_valkyrie_ros)/launch/valkyrie_ros_api.launch" pass_all_args="false">
    <arg name="use_local_build" value="$(arg use_local_build)" />
  </include>

  <include file="$(find ihmc_valkyrie_ros)/launch/val_wholebody_control_gazebo.launch"/>

  <group if="$(arg grasping_init)">
    <node name="$(anon grasping_init)" pkg="val_deploy" type="delayed_roslaunch.sh" required="true" args="$(arg grasping_init_wait_time) srcsim grasping_init.launch" output="screen"/>
  </group>

  <!--
  <include file="$(find ihmc_valkyrie_ros)/launch/remote_valkyrie_visualizer.launch" pass_all_args="true">
    <arg name="use_local_build" value="$(arg use_local_build)" />
  </include>
  -->

  <!-- Launch image processing and robot_state_publisher for multisense camera -->
  <include file="$(find srcsim)/launch/multisense.launch" />

</launch>
