<%
  # Template for solar panel cable for SRC finals world

  # Requires the following global variables:
  # $cable_frame, $array_z_offset

  radius = 0.010
  length = 0.1
  link_count = 16
  link_mass = 0.05
  min_inertia = 0.0001
  height = 0.85 + $array_z_offset
  theta = Math::PI * 0.3
%>

<model name="solar_panel_cable">

  <self_collide>true</self_collide>

  <pose>
    <%= $cable_frame[0, 2] %>
    <%= $cable_frame[1, 2] %>
    <%= height %>
    0
    0
    <%= Math::atan2($cable_frame[1, 0], $cable_frame[0, 0]) %>
  </pose>

  <link name="link_0">
    <inertial>
      <mass><%= link_mass %></mass>
      <inertia>
        <ixx><%= [(2 * link_mass * radius * radius) / 3, min_inertia].max %></ixx>
        <iyy><%= [(2 * link_mass * radius * radius) / 3, min_inertia].max %></iyy>
        <izz><%= [(2 * link_mass * radius * radius) / 3, min_inertia].max %></izz>
      </inertia>
    </inertial>
    <visual name="visual">
      <geometry>
        <sphere>
          <radius><%= radius * 2 %></radius>
        </sphere>
      </geometry>
      <material>
        <ambient>0 0 0 1</ambient>
        <emissive>0 0 0 1</emissive>
        <diffuse>0 0 0 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>
  </link>

  <%
    for link in 1..link_count
      x = (link - 1) * length * Math::cos(theta)

      if link % 2 == 0
        y = length * Math::sin(theta)
      else
        y = 0
      end

      if link % 4 == 0
        y = -y
      end

      if (link * 0.5).floor % 2 != 0
        t = -theta
      else
        t = theta
      end

      parent = link - 1
      child = link
  %>

  <link name="link_<%= link %>">
    <pose><%= x %> <%= y %> 0 0 <%= Math::PI * 0.5 %> <%= t %></pose>
    <inertial>
      <pose>0 0 <%= length / 2 %> 0 0 0</pose>
      <mass><%= link_mass %></mass>
      <inertia>
        <ixx><%= [link_mass * ( 3 * radius * radius + length * length) /12, min_inertia].max %></ixx>
        <iyy><%= [link_mass * ( 3 * radius * radius + length * length) /12, min_inertia].max %></iyy>
        <izz><%= [link_mass * radius * radius * 0.5, min_inertia].max %></izz>
      </inertia>
    </inertial>
    <collision name="cylinder">
      <pose>0 0 <%= length / 2 %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length %></length>
          <radius><%= radius %></radius>
        </cylinder>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>1e5</kp>
            <kd>1</kd>
            <max_vel>0.1</max_vel>
            <min_depth>0.0015</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <collision name="sphere">
      <geometry>
        <sphere>
          <radius><%= radius %></radius>
        </sphere>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>1e5</kp>
            <kd>1</kd>
            <max_vel>0.1</max_vel>
            <min_depth>0.0015</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name="cylinder">
      <pose>0 0 <%= length / 2 %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length %></length>
          <radius><%= radius %></radius>
        </cylinder>
      </geometry>
      <material>
        <ambient>0 0 0 1</ambient>
        <emissive>0 0 0 1</emissive>
        <diffuse>0.1 0.1 0.1 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>
    <visual name="sphere">
      <geometry>
        <sphere>
          <radius><%= radius %></radius>
        </sphere>
      </geometry>
      <material>
        <ambient>0 0 0 1</ambient>
        <emissive>0 0 0 1</emissive>
        <diffuse>0.1 0.1 0.1 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <% if link == link_count %>

    <collision name="plug_collision_1">
      <pose>0 0 <%= length %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.1 %></length>
          <radius><%= radius * 2.0 %></radius>
        </cylinder>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>1e5</kp>
            <kd>1</kd>
            <max_vel>0.1</max_vel>
            <min_depth>0.0015</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name="plug_visual_1">
      <pose>0 0 <%= length %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.1 %></length>
          <radius><%= radius * 2.0 %></radius>
        </cylinder>
      </geometry>
      <material>
        <ambient>0 0 0.3 1</ambient>
        <emissive>0 0 0.5 1</emissive>
        <diffuse>0 0 0.1 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <collision name="plug_collision_2">
      <pose>0 0 <%= length %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.2 %></length>
          <radius><%= radius * 1.5 %></radius>
        </cylinder>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>1e5</kp>
            <kd>1</kd>
            <max_vel>0.1</max_vel>
            <min_depth>0.0015</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name="plug_visual_2">
      <pose>0 0 <%= length %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.2 %></length>
          <radius><%= radius * 1.5 %></radius>
        </cylinder>
      </geometry>
      <material>
        <ambient>0 0 0.7 1</ambient>
        <emissive>0 0 0.2 1</emissive>
        <diffuse>0 0 0.1 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <collision name="plug_collision_3">
      <pose>0 0 <%= length * 0.9 %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.5 %></length>
          <radius><%= radius * 1.1 %></radius>
        </cylinder>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>1e5</kp>
            <kd>1</kd>
            <max_vel>0.1</max_vel>
            <min_depth>0.0015</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name="plug_visual_3">
      <pose>0 0 <%= length * 0.9 %> 0 0 0</pose>
      <geometry>
        <cylinder>
          <length><%= length * 0.5 %></length>
          <radius><%= radius * 1.1 %></radius>
        </cylinder>
      </geometry>
      <material>
        <ambient>0 0 0.3 1</ambient>
        <emissive>0 0 0.2 1</emissive>
        <diffuse>0 0 0.1 1</diffuse>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <sensor name="tip_sensor" type="contact">
      <contact>
        <collision>plug_collision_3</collision>
        <collision>cylinder</collision>
        <collision>sphere</collision>
      </contact>
    </sensor>

    <% end %>

  </link>

  <joint name="joint_<%= link %>" type="universal">
    <child>link_<%= child %></child>
    <parent>link_<%= parent %></parent>
    <axis>
      <xyz>0 1 0</xyz>
      <limit>
        <lower><%= -Math::PI * 0.5 %></lower>
        <upper><%= Math::PI * 0.5 %></upper>
      </limit>
    </axis>
    <axis2>
      <xyz>-1 0 0</xyz>
      <limit>
        <lower><%= -Math::PI * 0.5 %></lower>
        <upper><%= Math::PI * 0.5 %></upper>
      </limit>
    </axis2>
    <physics>
      <ode>
        <cfm_damping>1</cfm_damping>
      </ode>
    </physics>
  </joint>

  <% end %>

  <joint name="world" type="fixed">
    <child>link_0</child>
    <parent>world</parent>
  </joint>

  <plugin name="touch_valkyrie_cable" filename="libTouchPlugin.so">
    <sensor>tip_sensor</sensor>
    <target>valkyrie</target>
    <time>0.5</time>
    <namespace>task2/checkpoint4</namespace>
  </plugin>

</model>
